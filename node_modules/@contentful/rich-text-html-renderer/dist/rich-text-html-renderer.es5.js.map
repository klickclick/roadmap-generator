{"version":3,"file":"rich-text-html-renderer.es5.js","sources":["../src/index.ts"],"sourcesContent":["import {\n  BLOCKS,\n  Block,\n  Document,\n  INLINES,\n  Inline,\n  MARKS,\n  Mark,\n  Text,\n  helpers,\n} from '@contentful/rich-text-types';\nimport escape from 'escape-html';\n\nconst attributeValue = (value: string) => `\"${value.replace(/\"/g, '&quot;')}\"`;\n\nconst defaultNodeRenderers: RenderNode = {\n  [BLOCKS.PARAGRAPH]: (node, next) => `<p>${next(node.content)}</p>`,\n  [BLOCKS.HEADING_1]: (node, next) => `<h1>${next(node.content)}</h1>`,\n  [BLOCKS.HEADING_2]: (node, next) => `<h2>${next(node.content)}</h2>`,\n  [BLOCKS.HEADING_3]: (node, next) => `<h3>${next(node.content)}</h3>`,\n  [BLOCKS.HEADING_4]: (node, next) => `<h4>${next(node.content)}</h4>`,\n  [BLOCKS.HEADING_5]: (node, next) => `<h5>${next(node.content)}</h5>`,\n  [BLOCKS.HEADING_6]: (node, next) => `<h6>${next(node.content)}</h6>`,\n  [BLOCKS.EMBEDDED_ENTRY]: (node, next) => `<div>${next(node.content)}</div>`,\n  [BLOCKS.EMBEDDED_RESOURCE]: (node, next) => `<div>${next(node.content)}</div>`,\n  [BLOCKS.UL_LIST]: (node, next) => `<ul>${next(node.content)}</ul>`,\n  [BLOCKS.OL_LIST]: (node, next) => `<ol>${next(node.content)}</ol>`,\n  [BLOCKS.LIST_ITEM]: (node, next) => `<li>${next(node.content)}</li>`,\n  [BLOCKS.QUOTE]: (node, next) => `<blockquote>${next(node.content)}</blockquote>`,\n  [BLOCKS.HR]: () => '<hr/>',\n  [BLOCKS.TABLE]: (node, next) => `<table>${next(node.content)}</table>`,\n  [BLOCKS.TABLE_ROW]: (node, next) => `<tr>${next(node.content)}</tr>`,\n  [BLOCKS.TABLE_HEADER_CELL]: (node, next) => `<th>${next(node.content)}</th>`,\n  [BLOCKS.TABLE_CELL]: (node, next) => `<td>${next(node.content)}</td>`,\n  [INLINES.ASSET_HYPERLINK]: (node) => defaultInline(INLINES.ASSET_HYPERLINK, node as Inline),\n  [INLINES.ENTRY_HYPERLINK]: (node) => defaultInline(INLINES.ENTRY_HYPERLINK, node as Inline),\n  [INLINES.RESOURCE_HYPERLINK]: (node) =>\n    defaultInlineResource(INLINES.RESOURCE_HYPERLINK, node as Inline),\n  [INLINES.EMBEDDED_ENTRY]: (node) => defaultInline(INLINES.EMBEDDED_ENTRY, node as Inline),\n  [INLINES.EMBEDDED_RESOURCE]: (node) =>\n    defaultInlineResource(INLINES.EMBEDDED_RESOURCE, node as Inline),\n  [INLINES.HYPERLINK]: (node, next) => {\n    const href = typeof node.data.uri === 'string' ? node.data.uri : '';\n    return `<a href=${attributeValue(href)}>${next(node.content)}</a>`;\n  },\n};\n\nconst defaultMarkRenderers: RenderMark = {\n  [MARKS.BOLD]: (text) => `<b>${text}</b>`,\n  [MARKS.ITALIC]: (text) => `<i>${text}</i>`,\n  [MARKS.UNDERLINE]: (text) => `<u>${text}</u>`,\n  [MARKS.CODE]: (text) => `<code>${text}</code>`,\n  [MARKS.SUPERSCRIPT]: (text) => `<sup>${text}</sup>`,\n  [MARKS.SUBSCRIPT]: (text) => `<sub>${text}</sub>`,\n  [MARKS.STRIKETHROUGH]: (text) => `<s>${text}</s>`,\n};\n\nconst defaultInline = (type: string, node: Inline) =>\n  `<span>type: ${escape(type)} id: ${escape(node.data.target.sys.id)}</span>`;\n\nconst defaultInlineResource = (type: string, node: Inline) =>\n  `<span>type: ${escape(type)} urn: ${escape(node.data.target.sys.urn)}</span>`;\n\nexport type CommonNode = Text | Block | Inline;\n\nexport interface Next {\n  (nodes: CommonNode[]): string;\n}\n\nexport interface NodeRenderer {\n  (node: Block | Inline, next: Next): string;\n}\n\nexport interface RenderNode {\n  [k: string]: NodeRenderer;\n}\n\nexport interface RenderMark {\n  [k: string]: (text: string) => string;\n}\n\nexport interface Options {\n  /**\n   * Node renderers\n   */\n  renderNode?: RenderNode;\n  /**\n   * Mark renderers\n   */\n  renderMark?: RenderMark;\n  /**\n   * Keep line breaks and multiple spaces\n   */\n  preserveWhitespace?: boolean;\n  /**\n   * Strip empty trailing paragraph from the document\n   */\n  stripEmptyTrailingParagraph?: boolean;\n}\n\n/**\n * Serialize a Contentful Rich Text `document` to an html string.\n */\nexport function documentToHtmlString(\n  richTextDocument: Document,\n  options: Partial<Options> = {},\n): string {\n  if (!richTextDocument || !richTextDocument.content) {\n    return '';\n  }\n\n  // Strip empty trailing paragraph if enabled\n  let processedDocument = richTextDocument;\n  if (options.stripEmptyTrailingParagraph) {\n    processedDocument = helpers.stripEmptyTrailingParagraphFromDocument(richTextDocument);\n  }\n\n  return nodeListToHtmlString(processedDocument.content, {\n    renderNode: {\n      ...defaultNodeRenderers,\n      ...options.renderNode,\n    },\n    renderMark: {\n      ...defaultMarkRenderers,\n      ...options.renderMark,\n    },\n    preserveWhitespace: options.preserveWhitespace,\n  });\n}\n\nfunction nodeListToHtmlString(\n  nodes: CommonNode[],\n  { renderNode, renderMark, preserveWhitespace }: Options,\n): string {\n  return nodes\n    .map<string>((node) => nodeToHtmlString(node, { renderNode, renderMark, preserveWhitespace }))\n    .join('');\n}\n\nfunction nodeToHtmlString(\n  node: CommonNode,\n  { renderNode, renderMark, preserveWhitespace }: Options,\n): string {\n  if (helpers.isText(node)) {\n    let nodeValue = escape(node.value);\n\n    // If preserveWhitespace is true, handle line breaks and spaces.\n    if (preserveWhitespace) {\n      nodeValue = nodeValue\n        .replace(/\\n/g, '<br/>')\n        .replace(/ {2,}/g, (match) => '&nbsp;'.repeat(match.length));\n    }\n\n    if (node.marks.length > 0) {\n      return node.marks.reduce((value: string, mark: Mark) => {\n        if (!renderMark[mark.type]) {\n          return value;\n        }\n        return renderMark[mark.type](value);\n      }, nodeValue);\n    }\n\n    return nodeValue;\n  } else {\n    const nextNode: Next = (nodes) =>\n      nodeListToHtmlString(nodes, { renderMark, renderNode, preserveWhitespace });\n    if (!node.nodeType || !renderNode[node.nodeType]) {\n      // TODO: Figure what to return when passed an unrecognized node.\n      return '';\n    }\n    return renderNode[node.nodeType](node, nextNode);\n  }\n}\n"],"names":["attributeValue","value","replace","defaultNodeRenderers","BLOCKS","PARAGRAPH","node","next","content","HEADING_1","HEADING_2","HEADING_3","HEADING_4","HEADING_5","HEADING_6","EMBEDDED_ENTRY","EMBEDDED_RESOURCE","UL_LIST","OL_LIST","LIST_ITEM","QUOTE","HR","TABLE","TABLE_ROW","TABLE_HEADER_CELL","TABLE_CELL","INLINES","ASSET_HYPERLINK","defaultInline","ENTRY_HYPERLINK","RESOURCE_HYPERLINK","defaultInlineResource","HYPERLINK","href","data","uri","defaultMarkRenderers","MARKS","BOLD","text","ITALIC","UNDERLINE","CODE","SUPERSCRIPT","SUBSCRIPT","STRIKETHROUGH","type","escape","target","sys","id","urn","documentToHtmlString","richTextDocument","options","processedDocument","stripEmptyTrailingParagraph","helpers","stripEmptyTrailingParagraphFromDocument","nodeListToHtmlString","renderNode","renderMark","preserveWhitespace","nodes","map","nodeToHtmlString","join","isText","nodeValue","match","repeat","length","marks","reduce","mark","nextNode","nodeType"],"mappings":";;;;;AAaA,MAAMA,cAAAA,GAAiB,CAACC,KAAAA,GAAkB,CAAC,CAAC,EAAEA,KAAAA,CAAMC,OAAO,CAAC,IAAA,EAAM,QAAA,CAAA,CAAU,CAAC,CAAC;AAE9E,MAAMC,oBAAAA,GAAmC;AACvC,IAAA,CAACC,oBAAAA,CAAOC,SAAS,GAAG,CAACC,IAAAA,EAAMC,IAAAA,GAAS,CAAC,GAAG,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,IAAI,CAAC;AAClE,IAAA,CAACJ,oBAAAA,CAAOK,SAAS,GAAG,CAACH,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AACpE,IAAA,CAACJ,oBAAAA,CAAOM,SAAS,GAAG,CAACJ,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AACpE,IAAA,CAACJ,oBAAAA,CAAOO,SAAS,GAAG,CAACL,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AACpE,IAAA,CAACJ,oBAAAA,CAAOQ,SAAS,GAAG,CAACN,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AACpE,IAAA,CAACJ,oBAAAA,CAAOS,SAAS,GAAG,CAACP,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AACpE,IAAA,CAACJ,oBAAAA,CAAOU,SAAS,GAAG,CAACR,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AACpE,IAAA,CAACJ,oBAAAA,CAAOW,cAAc,GAAG,CAACT,IAAAA,EAAMC,IAAAA,GAAS,CAAC,KAAK,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,MAAM,CAAC;AAC3E,IAAA,CAACJ,oBAAAA,CAAOY,iBAAiB,GAAG,CAACV,IAAAA,EAAMC,IAAAA,GAAS,CAAC,KAAK,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,MAAM,CAAC;AAC9E,IAAA,CAACJ,oBAAAA,CAAOa,OAAO,GAAG,CAACX,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AAClE,IAAA,CAACJ,oBAAAA,CAAOc,OAAO,GAAG,CAACZ,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AAClE,IAAA,CAACJ,oBAAAA,CAAOe,SAAS,GAAG,CAACb,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AACpE,IAAA,CAACJ,oBAAAA,CAAOgB,KAAK,GAAG,CAACd,IAAAA,EAAMC,IAAAA,GAAS,CAAC,YAAY,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,aAAa,CAAC;AAChF,IAAA,CAACJ,oBAAAA,CAAOiB,EAAE,GAAG,IAAM,OAAA;AACnB,IAAA,CAACjB,oBAAAA,CAAOkB,KAAK,GAAG,CAAChB,IAAAA,EAAMC,IAAAA,GAAS,CAAC,OAAO,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,QAAQ,CAAC;AACtE,IAAA,CAACJ,oBAAAA,CAAOmB,SAAS,GAAG,CAACjB,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AACpE,IAAA,CAACJ,oBAAAA,CAAOoB,iBAAiB,GAAG,CAAClB,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;AAC5E,IAAA,CAACJ,oBAAAA,CAAOqB,UAAU,GAAG,CAACnB,IAAAA,EAAMC,IAAAA,GAAS,CAAC,IAAI,EAAEA,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,KAAK,CAAC;IACrE,CAACkB,qBAAAA,CAAQC,eAAe,GAAG,CAACrB,IAAAA,GAASsB,aAAAA,CAAcF,qBAAAA,CAAQC,eAAe,EAAErB,IAAAA,CAAAA;IAC5E,CAACoB,qBAAAA,CAAQG,eAAe,GAAG,CAACvB,IAAAA,GAASsB,aAAAA,CAAcF,qBAAAA,CAAQG,eAAe,EAAEvB,IAAAA,CAAAA;IAC5E,CAACoB,qBAAAA,CAAQI,kBAAkB,GAAG,CAACxB,IAAAA,GAC7ByB,qBAAAA,CAAsBL,qBAAAA,CAAQI,kBAAkB,EAAExB,IAAAA,CAAAA;IACpD,CAACoB,qBAAAA,CAAQX,cAAc,GAAG,CAACT,IAAAA,GAASsB,aAAAA,CAAcF,qBAAAA,CAAQX,cAAc,EAAET,IAAAA,CAAAA;IAC1E,CAACoB,qBAAAA,CAAQV,iBAAiB,GAAG,CAACV,IAAAA,GAC5ByB,qBAAAA,CAAsBL,qBAAAA,CAAQV,iBAAiB,EAAEV,IAAAA,CAAAA;AACnD,IAAA,CAACoB,qBAAAA,CAAQM,SAAS,GAAG,CAAC1B,IAAAA,EAAMC,IAAAA,GAAAA;AAC1B,QAAA,MAAM0B,IAAAA,GAAO,OAAO3B,IAAAA,CAAK4B,IAAI,CAACC,GAAG,KAAK,QAAA,GAAW7B,IAAAA,CAAK4B,IAAI,CAACC,GAAG,GAAG,EAAA;AACjE,QAAA,OAAO,CAAC,QAAQ,EAAEnC,cAAAA,CAAeiC,IAAAA,CAAAA,CAAM,CAAC,EAAE1B,IAAAA,CAAKD,IAAAA,CAAKE,OAAO,CAAA,CAAE,IAAI,CAAC;AACpE,IAAA;AACF,CAAA;AAEA,MAAM4B,oBAAAA,GAAmC;IACvC,CAACC,mBAAAA,CAAMC,IAAI,GAAG,CAACC,IAAAA,GAAS,CAAC,GAAG,EAAEA,IAAAA,CAAK,IAAI,CAAC;IACxC,CAACF,mBAAAA,CAAMG,MAAM,GAAG,CAACD,IAAAA,GAAS,CAAC,GAAG,EAAEA,IAAAA,CAAK,IAAI,CAAC;IAC1C,CAACF,mBAAAA,CAAMI,SAAS,GAAG,CAACF,IAAAA,GAAS,CAAC,GAAG,EAAEA,IAAAA,CAAK,IAAI,CAAC;IAC7C,CAACF,mBAAAA,CAAMK,IAAI,GAAG,CAACH,IAAAA,GAAS,CAAC,MAAM,EAAEA,IAAAA,CAAK,OAAO,CAAC;IAC9C,CAACF,mBAAAA,CAAMM,WAAW,GAAG,CAACJ,IAAAA,GAAS,CAAC,KAAK,EAAEA,IAAAA,CAAK,MAAM,CAAC;IACnD,CAACF,mBAAAA,CAAMO,SAAS,GAAG,CAACL,IAAAA,GAAS,CAAC,KAAK,EAAEA,IAAAA,CAAK,MAAM,CAAC;IACjD,CAACF,mBAAAA,CAAMQ,aAAa,GAAG,CAACN,IAAAA,GAAS,CAAC,GAAG,EAAEA,IAAAA,CAAK,IAAI;AAClD,CAAA;AAEA,MAAMX,aAAAA,GAAgB,CAACkB,IAAAA,EAAcxC,IAAAA,GACnC,CAAC,YAAY,EAAEyC,MAAAA,CAAOD,IAAAA,CAAAA,CAAM,KAAK,EAAEC,OAAOzC,IAAAA,CAAK4B,IAAI,CAACc,MAAM,CAACC,GAAG,CAACC,EAAE,CAAA,CAAE,OAAO,CAAC;AAE7E,MAAMnB,qBAAAA,GAAwB,CAACe,IAAAA,EAAcxC,IAAAA,GAC3C,CAAC,YAAY,EAAEyC,MAAAA,CAAOD,IAAAA,CAAAA,CAAM,MAAM,EAAEC,OAAOzC,IAAAA,CAAK4B,IAAI,CAACc,MAAM,CAACC,GAAG,CAACE,GAAG,CAAA,CAAE,OAAO,CAAC;AA0CxE,SAASC,oBAAAA,CACdC,gBAA0B,EAC1BC,OAAAA,GAA4B,EAAE,EAAA;AAE9B,IAAA,IAAI,CAACD,gBAAAA,IAAoB,CAACA,gBAAAA,CAAiB7C,OAAO,EAAE;QAClD,OAAO,EAAA;AACT,IAAA;AAGA,IAAA,IAAI+C,iBAAAA,GAAoBF,gBAAAA;IACxB,IAAIC,OAAAA,CAAQE,2BAA2B,EAAE;QACvCD,iBAAAA,GAAoBE,qBAAAA,CAAQC,uCAAuC,CAACL,gBAAAA,CAAAA;AACtE,IAAA;IAEA,OAAOM,oBAAAA,CAAqBJ,iBAAAA,CAAkB/C,OAAO,EAAE;QACrDoD,UAAAA,EAAY;AACV,YAAA,GAAGzD,oBAAoB;AACvB,YAAA,GAAGmD,QAAQM;AACb,SAAA;QACAC,UAAAA,EAAY;AACV,YAAA,GAAGzB,oBAAoB;AACvB,YAAA,GAAGkB,QAAQO;AACb,SAAA;AACAC,QAAAA,kBAAAA,EAAoBR,QAAQQ;AAC9B,KAAA,CAAA;AACF;AAEA,SAASH,oBAAAA,CACPI,KAAmB,EACnB,EAAEH,UAAU,EAAEC,UAAU,EAAEC,kBAAkB,EAAW,EAAA;AAEvD,IAAA,OAAOC,MACJC,GAAG,CAAS,CAAC1D,IAAAA,GAAS2D,iBAAiB3D,IAAAA,EAAM;AAAEsD,YAAAA,UAAAA;AAAYC,YAAAA,UAAAA;AAAYC,YAAAA;AAAmB,SAAA,CAAA,CAAA,CAC1FI,IAAI,CAAC,EAAA,CAAA;AACV;AAEA,SAASD,gBAAAA,CACP3D,IAAgB,EAChB,EAAEsD,UAAU,EAAEC,UAAU,EAAEC,kBAAkB,EAAW,EAAA;IAEvD,IAAIL,qBAAAA,CAAQU,MAAM,CAAC7D,IAAAA,CAAAA,EAAO;QACxB,IAAI8D,SAAAA,GAAYrB,MAAAA,CAAOzC,IAAAA,CAAKL,KAAK,CAAA;AAGjC,QAAA,IAAI6D,kBAAAA,EAAoB;AACtBM,YAAAA,SAAAA,GAAYA,SAAAA,CACTlE,OAAO,CAAC,KAAA,EAAO,SACfA,OAAO,CAAC,QAAA,EAAU,CAACmE,KAAAA,GAAU,QAAA,CAASC,MAAM,CAACD,MAAME,MAAM,CAAA,CAAA;AAC9D,QAAA;AAEA,QAAA,IAAIjE,IAAAA,CAAKkE,KAAK,CAACD,MAAM,GAAG,CAAA,EAAG;AACzB,YAAA,OAAOjE,KAAKkE,KAAK,CAACC,MAAM,CAAC,CAACxE,KAAAA,EAAeyE,IAAAA,GAAAA;AACvC,gBAAA,IAAI,CAACb,UAAU,CAACa,IAAAA,CAAK5B,IAAI,CAAC,EAAE;oBAC1B,OAAO7C,KAAAA;AACT,gBAAA;AACA,gBAAA,OAAO4D,UAAU,CAACa,IAAAA,CAAK5B,IAAI,CAAC,CAAC7C,KAAAA,CAAAA;YAC/B,CAAA,EAAGmE,SAAAA,CAAAA;AACL,QAAA;QAEA,OAAOA,SAAAA;IACT,CAAA,MAAO;AACL,QAAA,MAAMO,QAAAA,GAAiB,CAACZ,KAAAA,GACtBJ,oBAAAA,CAAqBI,KAAAA,EAAO;AAAEF,gBAAAA,UAAAA;AAAYD,gBAAAA,UAAAA;AAAYE,gBAAAA;AAAmB,aAAA,CAAA;QAC3E,IAAI,CAACxD,IAAAA,CAAKsE,QAAQ,IAAI,CAAChB,UAAU,CAACtD,IAAAA,CAAKsE,QAAQ,CAAC,EAAE;YAEhD,OAAO,EAAA;AACT,QAAA;AACA,QAAA,OAAOhB,UAAU,CAACtD,IAAAA,CAAKsE,QAAQ,CAAC,CAACtE,IAAAA,EAAMqE,QAAAA,CAAAA;AACzC,IAAA;AACF;;;;"}